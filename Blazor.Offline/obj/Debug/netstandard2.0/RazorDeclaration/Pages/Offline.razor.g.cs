#pragma checksum "d:\Repositories\blazor-offline\Blazor.Offline\Pages\Offline.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "76b2e9c39caefa41edb0b4ed1cfadb9469ea23bc"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Blazor.Offline.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "d:\Repositories\blazor-offline\Blazor.Offline\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "d:\Repositories\blazor-offline\Blazor.Offline\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "d:\Repositories\blazor-offline\Blazor.Offline\_Imports.razor"
using Microsoft.AspNetCore.Components.Layouts;

#line default
#line hidden
#line 4 "d:\Repositories\blazor-offline\Blazor.Offline\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 5 "d:\Repositories\blazor-offline\Blazor.Offline\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "d:\Repositories\blazor-offline\Blazor.Offline\_Imports.razor"
using Blazor.Offline;

#line default
#line hidden
#line 7 "d:\Repositories\blazor-offline\Blazor.Offline\_Imports.razor"
using Blazor.Offline.Shared;

#line default
#line hidden
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public class Offline : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 19 "d:\Repositories\blazor-offline\Blazor.Offline\Pages\Offline.razor"
        
     IEnumerable<string> colours = new [] { "#000", "#F4908E", "#F2F097", "#88B0DC", "#F7B5D1", "#53C4AF", "#FDE38C" };
     ElementRef canvas;

     WindowSize windowSize;
     bool isPainting = false;
     double x;
     double y;

     Canvas2DContext ctx;

     protected override async Task OnInitAsync()
     {
         windowSize = await JsRuntime.InvokeAsync<WindowSize>("getWindowSize");
         ctx = new Canvas2DContext(JsRuntime, canvas);
         await ctx.SetStrokeStyleAsync(colours.First());
     }

     private void StartPaint(UIMouseEventArgs e)
     {
         x = e.ClientX;
         y = e.ClientY;
         isPainting = true;
     }

     private async Task Paint(UIMouseEventArgs e)
     {
        if(isPainting)
        {
            var eX = e.ClientX;
            var eY = e.ClientY;

            await ctx.DrawLine(x, y, eX, eY);
            x = eX;
            y = eY;
        }
     }

     private void StopPaint(UIMouseEventArgs e)
     {
         isPainting = false;
     }

     private Action<UIMouseEventArgs> SetStrokeColour(string colour)
     {
        return async _ => 
        {
            await ctx.SetStrokeStyleAsync(colour);
        };
     }
 

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
    }
}
#pragma warning restore 1591
